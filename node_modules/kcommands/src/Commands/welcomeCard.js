class welcomeCard {
    constructor(options = {}) {
        if(!username) throw new TypeError("No username of welcome card specify")
        if(!discriminator) throw new TypeError("No discriminator of welcome card specify")
        if(!welcometext) throw new TypeError("No welcome text of welcome card specify")
        if(!nomember) throw new TypeError("No number member of welcome card specify")
        this.username = options.username
        this.discriminator = options.discriminator
        this.welcometext = options.welcometext
        this.nomember = options.nomember
    }
    async getAttachment() {
        const { MessageAttachment } = require("discord.js")
        const Canvas = require('canvas')
        const { join } = require("path")
        const canvas = Canvas.createCanvas(1770, 635)
        const ctx = canvas.getContext('2d')
        const background = await Canvas.loadImage(join(__dirname, '../images', 'welcome.png'))
        ctx.drawImage(background, 0, 0, canvas.width, canvas.height)
        ctx.strokeStyle = '#FFFFFF'

        ctx.strokeRect(0, 0, canvas.width, canvas.height)
        var name = this.username 
        if (name.length >= 16) {
            ctx.font = 'bold 80px Sans' 
            ctx.fillStyle = '#0FEEF3'
            ctx.fillText(name, 710, canvas.height / 2 - 30)
        } else { 
            ctx.font = 'bold 90px Sans' 
            ctx.fillStyle = '#0FEEF3'
            ctx.fillText(name, 710, canvas.height / 2 - 30) 
        }

        var discrim = this.discriminator 
        ctx.font = 'bold 60px Sans' 
        ctx.fillStyle = '#FA9448' 
        ctx.fillText(discrim, 700, canvas.height / 2 + 40)

        var server = this.welcometext
        ctx.font = 'bold 70px Sans' 
        ctx.fillStyle = '#21FBA1' 
        ctx.fillText(server, 690, canvas.height / 2 - 150) 

        var count = this.nomember
        ctx.font = 'bold 60px Sans' 
        ctx.fillStyle = '#21FBA1' 
        ctx.fillText(count, 730, canvas.height / 2 + 130)

        ctx.beginPath()
        ctx.arc(315, canvas.height / 2, 260, 0, Math.PI * 2, true)
        ctx.closePath()
        ctx.clip()

        const avatar = await Canvas.loadImage(member.user.displayAvatarURL({ format: 'png' }))
        ctx.drawImage(avatar, 65, canvas.height / 2 - 250, 510, 510)

        const attachment = new MessageAttachment(canvas.toBuffer(), 'welcome.png')
        return attachment;
    }
}

module.exports = {
    welcomeCard
}